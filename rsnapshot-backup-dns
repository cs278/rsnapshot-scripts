#!/bin/bash

#
# rsnapshot-backup-dns
#
# (c) Copyright 2007 Chris Smith
# This is free software. You may redistribute copies of it under the terms of
# the GNU General Public License <http://www.opensource.org/licenses/gpl-license.php>.
# There is NO WARRANTY, to the extent permitted by law.
#
# $Id$
#
# Download latest from: $HeadURL$
#

WHICH=$(which which);

if [ "$?" != "0" ]; then
	AWK=/usr/bin/awk;
	DATE=/bin/date;
	DIG=/usr/bin/dig;
#	MD5SUM=/usr/bin/md5sum;
#	SHA1SUM=/usr/bin/sha1sum;
#	SHA256SUM=/usr/bin/sha256sum;
else
	AWK=$($WHICH awk);
	DATE=$($WHICH date);
	DIG=$($WHICH dig);
#	MD5SUM=$($WHICH md5sum);
#	SHA1SUM=$($WHICH sha1sum);
#	SHA256SUM=$($WHICH sha256sum);
fi

function show_usage {
	echo "Usage: $0 [ --version | --help | domain ]";
	echo -e "    --help\tDisplay this help and exit";
	echo -e "    --version\tDisplay version and exit";
	exit $1;
}

function show_version {
	echo "rsnapshot-backup-dns";
	echo '$Id$';
	echo ""
	echo "(c) Copyright 2007 Chris Smith";
	echo "This is free software. You may redistribute copies of it under the terms of";
	echo "the GNU General Public License <http://www.opensource.org/licenses/gpl-license.php>.";
	echo "There is NO WARRANTY, to the extent permitted by law.";
	echo "";
	echo "Written by Chris Smith <http://www.cs278.org/>";
	exit 0;
}

if [ "$1" == "--help" ]; then
	show_usage 0;
	exit 0;
elif [ "$1" == "--version" ]; then
	show_version;
	exit 0;
elif [ "$1" == "" ]; then
	show_usage 1;
	exit 1;
else
	DOMAIN=$1;
fi

PRIMARY_NS=$($DIG +short soa $DOMAIN @80.225.250.186 | $AWK '{ print $1; }');
#DATA=$($DIG +noall +answer axfr $DOMAIN @$PRIMARY_NS);

echo -e ";\n; $DOMAIN from $PRIMARY_NS at `$DATE -R`\n;\n" > "$DOMAIN.zone";

#if [ -x $SHA256SUM ]; then
#	HASH=$(echo -n $DATA | $SHA256SUM -);
#	echo -e "; sha256sum for DATA portion: $HASH\n" >> "$DOMAIN.zone";
#fi

# People are more likely to have one of these tools so also include them as
# well as other checksum functions.
#if [ -x $SHA1SUM ]; then
#	HASH=$(echo -n $DATA | $SHA1SUM -);
#	echo -e "; sha1sum for DATA portion: $HASH\n" >> "$DOMAIN.zone";
#elif [ -x $MD5SUM ]; then
#	HASH=$(echo -n $DATA | $MD5SUM -);
#	echo -e "; md5sum for DATA portion: $HASH\n" >> "$DOMAIN.zone";
#fi

echo "; -- BEGIN DATA --" >> "$DOMAIN.zone";
$DIG +noall +answer axfr $DOMAIN @$PRIMARY_NS >> "$DOMAIN.zone";
echo "; -- END DATA --" >> "$DOMAIN.zone";

exit $?;
